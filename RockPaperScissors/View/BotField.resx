<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="scissors.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        DV4I5QmVcZpIRR//2Q==
</value>
  </data>
</root>